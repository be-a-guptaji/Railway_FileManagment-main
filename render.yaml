services:
  # Web Service - Main Flask Application
  - type: web
    name: railway-file-management
    env: python
    plan: starter
    buildCommand: pip install -r requirements.txt
    startCommand: python render_start.py && gunicorn --bind 0.0.0.0:$PORT --workers 2 --timeout 120 --preload app:app
    healthCheckPath: /health
    envVars:
      - key: FLASK_ENV
        value: production
      - key: PYTHON_VERSION
        value: 3.11.9
      - key: RENDER
        value: "1"
      - key: DATABASE_URL
        fromDatabase:
          name: railway-file-management-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: ADMIN_USER_1
        value: admin
      - key: ADMIN_PASS_1
        generateValue: true
      - key: ADMIN_USER_2
        value: manager
      - key: ADMIN_PASS_2
        generateValue: true
    disk:
      name: uploads
      mountPath: /opt/render/project/src/uploads
      sizeGB: 1

  # PostgreSQL Database
  - type: pserv
    name: railway-file-management-db
    env: postgresql
    plan: starter
    databaseName: railway_file_management
    databaseUser: railway_user
    ipAllowList: []
# Optional: Redis for caching (can be added later)
# - type: redis
#   name: railway-file-management-redis
#   plan: starter
#   ipAllowList: []
